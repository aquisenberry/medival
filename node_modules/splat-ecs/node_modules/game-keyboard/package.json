{
  "name": "game-keyboard",
  "version": "0.1.0",
  "description": "Check current state of keyboard keys in the browser. Suitable for games.",
  "main": "index.js",
  "scripts": {
    "lint": "bash -c \"jshint *.js\""
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ericlathrop/game-keyboard.git"
  },
  "keywords": [
    "game",
    "browser",
    "keyboard"
  ],
  "author": {
    "name": "Eric Lathrop",
    "email": "eric@ericlathrop.com",
    "url": "http://ericlathrop.com/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/ericlathrop/game-keyboard/issues"
  },
  "homepage": "https://github.com/ericlathrop/game-keyboard",
  "devDependencies": {
    "jshint": "^2.5.10"
  },
  "jshintConfig": {
    "camelcase": true,
    "curly": true,
    "eqeqeq": true,
    "forin": true,
    "freeze": true,
    "immed": true,
    "indent": 4,
    "latedef": "nofunc",
    "newcap": true,
    "noarg": true,
    "noempty": true,
    "nonbsp": true,
    "nonew": true,
    "quotmark": "double",
    "unused": "strict",
    "trailing": true,
    "browser": true,
    "devel": true,
    "globalstrict": true,
    "node": true,
    "globals": {}
  },
  "readme": "# game-keyboard\n\nCheck current state of keyboard keys in the browser. Suitable for games.\n\n# Example\n\n```javascript\nvar Keyboard = require(\"game-keyboard\");\nvar keyMap = require(\"game-keyboard/key_map\")[\"US\"];\nvar keyboard = new Keyboard(keyMap);\n\n// with no keys pressed\nkeyboard.isPressed(\"up\"); // returns false\nkeyboard.consumePressed(\"up\"); // returns false\n\n// start pressing up arrow\nkeyboard.isPressed(\"up\"); // returns true\nkeyboard.consumePressed(\"up\"); // returns true\n\n// continuing to press up arrow\nkeyboard.isPressed(\"up\"); // returns true\nkeyboard.consumePressed(\"up\"); // returns false\n```\n\n# Constructor\n\nThe constructor takes a keymap, which is an object that maps keyboard codes (e.keyCode) to human-readable names.\nThe human-readable names in the keymap are what you use as the argument to `isPressed` and `consumePressed`.\nThis library comes with a \"US\" keymap in `key_map.js`. I'll happily accept contributions for keymaps of other locales.\n\n# `isPressed(key)`\n\nTest if a key is currently pressed.\n\nAccepts a key name that is specified in the keymap that was given to the constructor.\n\n# `consumePressed(key)`\n\nTest if a key is currently pressed, and makes the key look not pressed to subsequent calls of `consumePressed`.\nTo make the key look pressed again, the key must be released and re-pressed. This does not affect how `isPressed` sees the key.\n\nThis is useful for when you want to do some action only the first time a key is pressed, but not every frame that it is held down. For example: entering text.\n\nAccepts a key name that is specified in the keymap that was given to the constructor.\n\n# Install\n\nWith [npm](https://www.npmjs.com/) do:\n\n```\nnpm install game-keyboard\n```\n\n# License\n\nMIT. See the file LICENSE.TXT.\n",
  "readmeFilename": "README.md",
  "_id": "game-keyboard@0.1.0",
  "_from": "game-keyboard@0.1.0"
}
